{"version":3,"sources":["index.js"],"names":["console","log","images","require","window","onload","ImageHoverEffect","elements","document","querySelectorAll","image","createElement","className","imageWidth","imageHeight","forEach","item","addEventListener","hoverStart","bind","hoverEnd","hoverMove","e","current","target","contains","first","Object","keys","dataset","hover","src","appendChild","classList","add","remove","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","style"],"mappings":";;;;;;;;;;;AAgDK,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAhDLA,QAAQC,IAAI,eACZ,IAAMC,EAASC,QAAQ,uBACvBH,QAAQC,IAAIC,GAEZE,OAAOC,OAAS,WAERC,IAAAA,GAGFA,IAAAA,EAAAA,WAEY,SAAA,IAAA,IAAA,EAAA,KAAA,EAAA,KAAA,GAELC,KAAAA,SAAWC,SAASC,iBAAiB,gBACrCC,KAAAA,MAAQF,SAASG,cAAc,OAC/BD,KAAAA,MAAME,UAAY,mBAClBC,KAAAA,WAAa,IACbC,KAAAA,YAAc,IACdP,KAAAA,SAASQ,QAAQ,SAAAC,GAClBA,EAAKC,iBAAiB,aAAc,EAAKC,WAAWC,KAAK,IACzDH,EAAKC,iBAAiB,aAAc,EAAKG,SAASD,KAAK,IACvDH,EAAKC,iBAAiB,YAAa,EAAKI,UAAUF,KAAK,MA2B9D,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,aAvBUG,MAAAA,SAAAA,GAAG,IAAA,EAAA,KACJC,EAAUD,EAAEE,OAEdD,EAAQE,SAAS,KAAKf,SACtBgB,MAAQC,OAAOC,KAAK1B,EAAOqB,EAAQM,QAAQC,QACtCpB,KAAAA,MAAMqB,IAAM7B,EAAOqB,EAAQM,QAAQC,OAAOJ,OAC/CH,EAAQS,YAAY,KAAKtB,OACpBA,KAAAA,MAAMO,iBAAiB,OAAQ,WAChC,EAAKP,MAAMuB,UAAUC,IAAI,cAepC,CAAA,IAAA,WAXQZ,MAAAA,SAAAA,GACAZ,KAAAA,MAAMuB,UAAUE,OAAO,SACvBzB,KAAAA,MAAMyB,WASd,CAAA,IAAA,YAPSb,MAAAA,SAAAA,GACFc,IAAAA,EAAOd,EAAEE,OAAOa,wBAChBC,EAAIhB,EAAEiB,QAAUH,EAAKI,KACrBC,EAAInB,EAAEoB,QAAUN,EAAKO,IAEpBjC,KAAAA,MAAMkC,MAAMD,IAAOF,EAAK,KAAK3B,YAAc,EAAK,KAChDJ,KAAAA,MAAMkC,MAAMJ,KAAQF,EAAK,KAAKzB,WAAa,EAAM,SACzD,EAvCCP","file":"portfolio.b9c06e89.js","sourceRoot":"..","sourcesContent":["console.log('hello world')\r\nconst images = require('./images/hovers/*.*');\r\nconsole.log(images);\r\n\r\nwindow.onload = () => {\r\n\r\n    new ImageHoverEffect();\r\n}\r\n\r\nclass ImageHoverEffect {\r\n\r\n    constructor() {\r\n\r\n        this.elements = document.querySelectorAll('[data-hover]');\r\n        this.image = document.createElement('img');\r\n        this.image.className = \"imageHoverEffekt\";\r\n        this.imageWidth = 440;\r\n        this.imageHeight = 580;\r\n        this.elements.forEach(item => {\r\n            item.addEventListener('mouseenter', this.hoverStart.bind(this));\r\n            item.addEventListener('mouseleave', this.hoverEnd.bind(this));\r\n            item.addEventListener('mousemove', this.hoverMove.bind(this));\r\n        });\r\n    }\r\n\r\n    hoverStart(e) {\r\n        const current = e.target;\r\n\r\n        if(!current.contains(this.image)) {\r\n            first = Object.keys(images[current.dataset.hover])\r\n            this.image.src = images[current.dataset.hover][first];\r\n            current.appendChild(this.image);\r\n            this.image.addEventListener('load', () => {\r\n                this.image.classList.add('added');\r\n            })\r\n        }\r\n    }\r\n    hoverEnd(e) {\r\n        this.image.classList.remove('added');\r\n        this.image.remove();\r\n    }\r\n    hoverMove(e) {\r\n        let rect = e.target.getBoundingClientRect(),\r\n            x = e.clientX - rect.left,\r\n            y = e.clientY - rect.top;\r\n            \r\n        this.image.style.top = (y - (this.imageHeight / 2)) +\"px\";\r\n        this.image.style.left = (x - (this.imageWidth / 2)) + \"px\";\r\n    }\r\n}\r\n"]}